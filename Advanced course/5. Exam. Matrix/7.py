# –•–æ–¥—ã —Ñ–µ—Ä–∑—è
# –ù–∞ —à–∞—Ö–º–∞—Ç–Ω–æ–π –¥–æ—Å–∫–µ 8 √ó 8 —Å—Ç–æ–∏—Ç —Ñ–µ—Ä–∑—å. –û—Ç–º–µ—Ç—å—Ç–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ñ–µ—Ä–∑—è –Ω–∞ –¥–æ—Å–∫–µ –∏ –≤—Å–µ –∫–ª–µ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—å–µ—Ç —Ñ–µ—Ä–∑—å. –ö–ª–µ—Ç–∫—É, –≥–¥–µ —Å—Ç–æ–∏—Ç —Ñ–µ—Ä–∑—å, –æ—Ç–º–µ—Ç—å—Ç–µ –±—É–∫–≤–æ–π Q, –∫–ª–µ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—å–µ—Ç —Ñ–µ—Ä–∑—å, –æ—Ç–º–µ—Ç—å—Ç–µ —Å–∏–º–≤–æ–ª–∞–º–∏ *, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª–µ—Ç–∫–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç–æ—á–∫–∞–º–∏.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ñ–µ—Ä–∑—è –Ω–∞ —à–∞—Ö–º–∞—Ç–Ω–æ–π –¥–æ—Å–∫–µ –≤ —à–∞—Ö–º–∞—Ç–Ω–æ–π –Ω–æ—Ç–∞—Ü–∏–∏ (—Ç–æ –µ—Å—Ç—å –≤ –≤–∏–¥–µ e4, –≥–¥–µ —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ (–±—É–∫–≤–∞ –æ—Ç a –¥–æ h, —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ), –∑–∞—Ç–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ (—Ü–∏—Ñ—Ä–∞ –æ—Ç 1 –¥–æ 8, —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö)).

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ—Å–∫–∏, —Ä–∞–∑–¥–µ–ª—è—è —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–±–µ–ª–∞–º–∏.
# '''

# üü¢üü¢üü¢üü¢üü¢üü¢ Main üü¢üü¢üü¢üü¢üü¢üü¢

coord = input()
x = 8 - int(coord[1])
y = 'abcdefgh'.index(coord[0])
matrix = [['.'] * 8 for _ in range(8)]

for i in range(8):
    matrix[x][i] = '*'
    matrix[i][y] = '*'
    for j in range(8):
        if i - j == x - y or  i + j == x + y:
            matrix[i][j] = '*'
matrix[x][y] = 'Q'

for row in matrix:
    print(*row)




# ü§îü§îü§îü§î Test ü§îü§îü§îü§î

# n = 4
# matrix = [
#     [1, 2, 3, 4],
#     [5, 6, 7, 3],
#     [8, 9, 6, 2],
#     [4, 8, 5, 1]]
# n = 4
# matrix =[
#     [1, 3, 4, 2],
#     [2, 4, 1, 3],
#     [3, 1, 2, 4],
#     [4, 2, 3, 1]]
# seq = [i for i in range(1, n + 1)]
# is_lat = 'YES'
# s_row = []

# for i in range(n):
#     s_col = []
#     for j in range(n):
#         s_col.append(matrix[j][i])
#     print(s_col)
#     s_row = matrix[i].copy()
#     s_row.sort()
#     s_col.sort()    
#     print(f'i = {i}; j = {j}; seq = {seq} ; s_row = {s_row} ; s_col = {s_col}')
#     if s_row != seq or s_col != seq:
#         is_lat = 'NO'
#         break
        
# print(is_lat)




