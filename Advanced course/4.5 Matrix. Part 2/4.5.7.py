# –ü–æ–≤–æ—Ä–æ—Ç –º–∞—Ç—Ä–∏—Ü—ã
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–≤–∞–¥—Ä–∞—Ç–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É —á–∏—Å–µ–ª –Ω–∞ 90‚àò –ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã –ø–æ—Å—Ç—Ä–æ—á–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω, —á–∏—Å–ª–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º.

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
# Sample Input 1:
# 3
# 1 2 3
# 4 5 6
# 7 8 9
# Sample Output 1:
# 7 4 1 
# 8 5 2 
# 9 6 3 

# Sample Input 2:
# 4
# 1 9 4 2
# 3 8 1 5
# 6 7 4 6
# 1 9 7 8
# Sample Output 2:
# 1 6 3 1
# 9 7 8 9
# 7 4 1 4
# 8 6 5 2

# üü¢üü¢üü¢üü¢üü¢   Main     üü¢üü¢üü¢üü¢üü¢

# n = int(input())
# matrix = []
# rotate_matrix = []

# matrix = [list(map(int, input().split())) for i in range(n)]

# for i in range(n):
#     rotate_matrix.append([matrix[-j - 1][i] for j in range(n)])

# for row in rotate_matrix:
#     print(' '.join(map(str, row)))





# ü§îü§îü§îü§îü§î    Test    ü§îü§îü§îü§îü§î

n = 3
matrix = [[1, 5, 6],
          [5, 5, 3],
          [4, 3, 3]]

rotate_matrix = []

# matrix = [[1, 5, 6, 7],
#           [5, 5, 3, 0],
#           [4, 3, 3, 1],
#           [2, 8, 9, 3]]

for i in range(n):
    rotate_matrix.append([matrix[-j - 1][i] for j in range(n)])

for row in rotate_matrix:
    print(' '.join(map(str, row)))

print(*rotate_matrix, sep='\n')