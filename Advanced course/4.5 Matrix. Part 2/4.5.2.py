# Максимум в таблице
# На вход программе подаются два натуральных числа n и m — количество строк и столбцов в матрице, затем n строк по m целых чисел в каждой, отделенных символом пробела.

# Напишите программу, которая находит индексы (строку и столбец) первого вхождения максимального элемента.

# Формат входных данных
# На вход программе на разных строках подаются два числа n и m — количество строк и столбцов в матрице, затем сами элементы матрицы построчно через пробел.

# Формат выходных данных
# Программа должна вывести два числа: номер строки и номер столбца, в которых стоит наибольший элемент таблицы. Если таких элементов несколько, то выводится тот, у которого меньше номер строки, а если номера строк равны то тот, у которого меньше номер столбца.

# Примечание. Считайте, что нумерация строк и столбцов начинается с нуля.

# Тестовые данные 🟢
# Sample Input 1:
# 3
# 4
# 0 3 2 4
# 2 3 5 5
# 5 1 2 3
# Sample Output 1:
# 1 2

# Sample Input 2:
# 3
# 3
# 5 3 4
# 2 3 0
# 4 1 5
# Sample Output 2:
# 0 0

# 🟢🟢🟢🟢🟢   Main     🟢🟢🟢🟢🟢

# n, m = int(input()), int(input())
# matrix = []

# matrix = [list(map(int, input().split())) for i in range(n)]

# maximum = matrix[0][0]
# max_index = [0, 0]

# for i in range(n):
#     for j in range(m):
#         if matrix[i][j] > maximum:
#             maximum = matrix[i][j]
#             max_index = [i, j]
# print(*max_index)





# 🤔🤔🤔🤔🤔    Test    🤔🤔🤔🤔🤔

n, m = 3, 3
max_index = [0, 0]

matrix = [[5, 6, 4],
          [2, 6, 0],
          [4, 1, 6]]
maximum = matrix[0][0]

for i in range(n):
    for j in range(m):
        if matrix[i][j] > maximum:
            maximum = matrix[i][j]
            max_index = [i, j]
    
print(*max_index)


