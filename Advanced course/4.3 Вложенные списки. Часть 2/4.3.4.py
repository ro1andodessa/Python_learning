# –¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –ü–∞—Å–∫–∞–ª—è 2
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ùëõ. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–µ ùëõ —Å—Ç—Ä–æ–∫ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –ü–∞—Å–∫–∞–ª—è.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ ùëõ(ùëõ ‚â• 1).

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –ø–µ—Ä–≤—ã–µ ùëõ —Å—Ç—Ä–æ–∫ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –ü–∞—Å–∫–∞–ª—è, –∫–∞–∂–¥—É—é –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
# Sample Input 1:
# 4
# Sample Output 1:
# 1
# 1 1
# 1 2 1
# 1 3 3 1

# Sample Input 2:
# 5
# Sample Output 2:
# 1
# 1 1
# 1 2 1
# 1 3 3 1
# 1 4 6 4 1

n = int(input())

def triangle(n):
      from math import factorial
      list1 = []
      for i in range(n // 2 + 1):
            list1.append(int(factorial(n) / (factorial(i) * factorial(n - i))))
      if n != 0:
            list1.extend(list1[len(list1) - 2 + (n % 2)::-1])
      return list1

print(*[' '.join(map(str, sublist)) for sublist in [triangle(i) for i in range(n)]], sep='\n')